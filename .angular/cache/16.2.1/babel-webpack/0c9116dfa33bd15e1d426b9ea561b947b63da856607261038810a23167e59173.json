{"ast":null,"code":"var _class;\nimport { EventEmitter } from '@angular/core';\nimport { ActionsEnum } from 'src/app/models/EnumActions';\nimport { ResponseModelTask } from 'src/app/models/ResponseModel';\nimport { StateModel, User } from 'src/app/models/TaskModel';\nimport { TaskModel } from 'src/app/models/TaskModel';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/taskService\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"src/app/services/stateService\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"primeng/button\";\nimport * as i6 from \"primeng/dialog\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"primeng/message\";\nimport * as i9 from \"primeng/dropdown\";\nfunction TaskComponent_ng_template_1_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"p-dropdown\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskComponent_ng_template_1_div_13_Template_p_dropdown_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.taskModel.state = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.taskModel.state)(\"options\", ctx_r2.statuses)(\"virtualScroll\", true)(\"virtualScrollItemSize\", 20)(\"showClear\", true);\n  }\n}\nfunction TaskComponent_ng_template_1_p_message_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-message\", 11);\n  }\n}\nfunction TaskComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"span\");\n    i0.ɵɵtext(2, \"T\\u00EDtulo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 4)(4, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskComponent_ng_template_1_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.taskModel.title = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 4)(6, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskComponent_ng_template_1_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.taskModel.developer = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"span\");\n    i0.ɵɵtext(8, \"Desarrollador\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 4)(10, \"input\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function TaskComponent_ng_template_1_Template_input_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.taskModel.description = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"span\");\n    i0.ɵɵtext(12, \"Descripci\\u00F3n\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(13, TaskComponent_ng_template_1_div_13_Template, 2, 5, \"div\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, TaskComponent_ng_template_1_p_message_14_Template, 1, 0, \"p-message\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.taskModel.title)(\"disabled\", ctx_r0.isEdit);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.taskModel.developer);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.taskModel.description);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isEdit);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.validForm);\n  }\n}\nfunction TaskComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function TaskComponent_ng_template_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.hideDialog());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(1, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function TaskComponent_ng_template_2_Template_button_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.saveTask($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return {\n    height: \"600px\",\n    width: \"600px\"\n  };\n};\nexport class TaskComponent {\n  constructor(taskService, messageService, stateService) {\n    this.taskService = taskService;\n    this.messageService = messageService;\n    this.stateService = stateService;\n    this.closeDialog = new EventEmitter();\n    this.taskModel = new TaskModel();\n    this.openDialog = false;\n    this.isEdit = false;\n    this.isAdd = false;\n    this.statuses = [];\n    this.statuses2 = [];\n    this.validForm = true;\n    this.token = \"\";\n    this.user = new User();\n    this.GetToken = user => {\n      this.taskService.getToken(user).subscribe(response => {\n        if (!response) return;\n        this.token = response.token;\n      });\n    };\n    this.validateForm = () => {\n      this.validForm = (this.taskModel.developer || '').length > 0 && (this.taskModel.title || '').length > 0 && (this.taskModel.developer || '').length > 0 ? true : false;\n    };\n    this.saveTask = event => {\n      if (event == null) return;\n      this.validateForm();\n      if (!this.validForm) return;\n      if (this.isEdit) this.postEditTask(this.taskModel);else this.postSaveTask(this.taskModel);\n    };\n    this.hideDialog = () => {\n      let model = new ResponseModelTask();\n      model.openDialog = false;\n      this.closeDialog.emit(model);\n    };\n    this.postSaveTask = task => {\n      task.id = this.generateUuid();\n      this.taskService.saveTask(task, this.token).subscribe(response => {\n        if (!response) return;\n        const state = new StateModel();\n        state.action = ActionsEnum.INSERT;\n        state.value = task;\n        this.stateService.setData(state);\n        this.messageService.add({\n          severity: response.isSuccessful ? 'success' : 'error',\n          summary: response.isSuccessful ? 'Completado' : 'error',\n          detail: response.isSuccessful ? `Se ha agregado la tarea ${this.taskModel.title}` : response.errorMessage\n        });\n        this.hideDialog();\n      });\n    };\n    this.postEditTask = task => {\n      this.taskService.editTask(task, this.token).subscribe(response => {\n        if (!response) return;\n        const state = new StateModel();\n        state.key = task.id.toString();\n        state.action = ActionsEnum.UPDATE;\n        state.value = task;\n        this.stateService.setData(state);\n        this.messageService.add({\n          severity: response.isSuccessful ? 'success' : 'error',\n          summary: response.isSuccessful ? 'Completado' : 'error',\n          detail: response.isSuccessful ? `Se ha actualizado la tarea ${this.taskModel.title}` : response.errorMessage\n        });\n        this.hideDialog();\n      });\n    };\n    this.statuses = [{\n      value: 'P',\n      label: \"Pendiente\",\n      color: 'danger'\n    }, {\n      value: 'E',\n      label: \"En progreso\",\n      color: 'warning'\n    }, {\n      value: 'C',\n      label: \"Completado\",\n      color: 'success'\n    }];\n  }\n  ngOnInit() {\n    this.user.email = \"ciro@gmail.com\";\n    this.user.password = \"123\";\n    // this.GetToken(this.user);\n  }\n\n  generateUuid() {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0,\n        v = c == \"x\" ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  }\n}\n_class = TaskComponent;\n_class.ɵfac = function TaskComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.taskService), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i3.stateService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"ta-app-task\"]],\n  inputs: {\n    taskModel: \"taskModel\",\n    openDialog: \"openDialog\",\n    isEdit: \"isEdit\",\n    isAdd: \"isAdd\"\n  },\n  outputs: {\n    closeDialog: \"closeDialog\"\n  },\n  decls: 3,\n  vars: 5,\n  consts: [[\"header\", \"Tareas\", \"styleClass\", \"p-fluid\", 3, \"visible\", \"modal\"], [\"pTemplate\", \"content\"], [\"pTemplate\", \"footer\"], [2, \"display\", \"grid\", \"gap\", \"10px\", \"padding\", \"20px\"], [1, \"inputbox\"], [\"type\", \"text\", \"pInputText\", \"\", \"maxlength\", \"20\", \"id\", \"taskName\", \"required\", \"\", \"autofocus\", \"\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"type\", \"text\", \"maxlength\", \"20\", \"pInputText\", \"\", \"id\", \"developer\", \"required\", \"\", \"autofocus\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"maxlength\", \"100\", \"pInputText\", \"\", \"id\", \"taskDescription\", \"required\", \"\", \"autofocus\", \"\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [\"severity\", \"error\", \"text\", \"Debe ingresar datos\", 4, \"ngIf\"], [\"placeholder\", \"Seleccione el estado\", 3, \"ngModel\", \"options\", \"virtualScroll\", \"virtualScrollItemSize\", \"showClear\", \"ngModelChange\"], [\"severity\", \"error\", \"text\", \"Debe ingresar datos\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Cancelar\", \"icon\", \"pi pi-times\", 1, \"p-button-text\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Guardar\", \"icon\", \"pi pi-check\", 1, \"p-button-text\", 3, \"click\"]],\n  template: function TaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-dialog\", 0);\n      i0.ɵɵtemplate(1, TaskComponent_ng_template_1_Template, 15, 6, \"ng-template\", 1);\n      i0.ɵɵtemplate(2, TaskComponent_ng_template_2_Template, 2, 0, \"ng-template\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(4, _c0));\n      i0.ɵɵproperty(\"visible\", ctx.openDialog)(\"modal\", true);\n    }\n  },\n  dependencies: [i4.NgIf, i2.PrimeTemplate, i5.ButtonDirective, i6.Dialog, i7.DefaultValueAccessor, i7.NgControlStatus, i7.RequiredValidator, i7.MaxLengthValidator, i7.NgModel, i8.UIMessage, i9.Dropdown],\n  styles: [\".inputbox[_ngcontent-%COMP%] {\\n  position: relative;\\n  width: 100%;\\n  height: 50px;\\n  margin-bottom: 20px;\\n}\\n.inputbox[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  border: 2px solid #000;\\n  outline: none;\\n  background: none;\\n  padding: 10px;\\n  border-radius: 10px;\\n  font-size: 1.2em;\\n}\\n.inputbox[_ngcontent-%COMP%]:last-child {\\n  margin-bottom: 0;\\n} .inputbox[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 14px;\\n  left: 20px;\\n  font-size: 1em;\\n  transition: 0.6s;\\n  font-family: sans-serif;\\n}\\n.inputbox[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus    ~ span[_ngcontent-%COMP%], .inputbox[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:valid    ~ span[_ngcontent-%COMP%] {\\n  transform: translateX(-13px) translateY(-35px);\\n  font-size: 1em;\\n}\\n.inputbox[_ngcontent-%COMP%]   [type=\\\"button\\\"][_ngcontent-%COMP%] {\\n  width: 50%;\\n  background: dodgerblue;\\n  color: #fff;\\n  border: #fff;\\n}\\n.inputbox[_ngcontent-%COMP%]:hover   [type=\\\"button\\\"][_ngcontent-%COMP%] {\\n  background: linear-gradient(45deg, greenyellow, dodgerblue);\\n}\"]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}