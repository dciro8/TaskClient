{"ast":null,"code":"var _class;\nimport { StateModel, TaskModel, User } from 'src/app/models/TaskModel';\nimport { ActionsEnum } from 'src/app/models/EnumActions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/taskService\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"src/app/services/stateService\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"primeng/table\";\nimport * as i6 from \"primeng/toast\";\nimport * as i7 from \"primeng/toolbar\";\nimport * as i8 from \"primeng/button\";\nimport * as i9 from \"primeng/tag\";\nimport * as i10 from \"primeng/confirmdialog\";\nimport * as i11 from \"../task/task.component\";\nconst _c0 = [\"dt\"];\nfunction TaskListComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_ng_template_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.addTask());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskListComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"p\", 12);\n    i0.ɵɵtext(2, \"Lista de tareas\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"span\", 13);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskListComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 14);\n    i0.ɵɵtext(2, \"T\\u00EDtulo tarea\");\n    i0.ɵɵelement(3, \"p-sortIcon\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"th\", 16);\n    i0.ɵɵtext(5, \"Desarrollador\");\n    i0.ɵɵelement(6, \"p-sortIcon\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 18);\n    i0.ɵɵtext(8, \"Descripci\\u00F3n\");\n    i0.ɵɵelement(9, \"p-sortIcon\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\", 20);\n    i0.ɵɵtext(11, \"Estado \");\n    i0.ɵɵelement(12, \"p-sortIcon\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\");\n    i0.ɵɵtext(14, \"Fecha Creaci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"th\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskListComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵelement(8, \"p-tag\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\")(13, \"div\", 23)(14, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_ng_template_9_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const task_r8 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.editTask(task_r8));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_ng_template_9_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const task_r8 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.deleteTaskConfirm(task_r8));\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const task_r8 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r8.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r8.developer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r8.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", task_r8.state)(\"severity\", ctx_r4.getStatus(task_r8.state));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 6, task_r8.dateCreate));\n  }\n}\nfunction TaskListComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"ta-app-task\", 26);\n    i0.ɵɵlistener(\"closeDialog\", function TaskListComponent_div_12_Template_ta_app_task_closeDialog_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.hideDialog($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"openDialog\", ctx_r5.openDialog)(\"taskModel\", ctx_r5.taskModel)(\"isEdit\", ctx_r5.isEditTask)(\"isAdd\", ctx_r5.isAdd);\n  }\n}\nconst _c1 = function () {\n  return {\n    \"min-width\": \"75rem\"\n  };\n};\nconst _c2 = function () {\n  return [\"dev\", \"name\", \"desc\", \"status\"];\n};\nconst _c3 = function () {\n  return {\n    width: \"50vw\"\n  };\n};\nexport class TaskListComponent {\n  constructor(taskService, messageService, confirmationService, stateService) {\n    this.taskService = taskService;\n    this.messageService = messageService;\n    this.confirmationService = confirmationService;\n    this.stateService = stateService;\n    this.taskList = [];\n    this.openDialog = false;\n    this.isEditTask = false;\n    this.isAdd = false;\n    this.token = \"\";\n    this.user = new User();\n    this.GetToken = user => {\n      debugger;\n      this.taskService.getToken(user).subscribe(response => {\n        debugger;\n        if (!response) return;\n        this.token = response;\n        this.getTaskList(this.token);\n      });\n    };\n    this.getTaskList = token => {\n      this.taskService.getTaskList(token).subscribe(response => {\n        debugger;\n        this.taskList = response.result || [];\n      });\n    };\n    this.getStatus = status => {\n      const first = status.substring(0, 1).toUpperCase();\n      switch (first) {\n        case \"C\":\n          return \"success\";\n          break;\n        case \"E\":\n          return \"warning\";\n          break;\n        case \"P\":\n          return \"danger\";\n          break;\n        default:\n          return \"danger\";\n          break;\n      }\n    };\n    this.addTask = () => {\n      this.openDialog = true;\n      this.isAdd = true;\n      this.isEditTask = false;\n      this.taskModel = new TaskModel();\n    };\n    this.editTask = task => {\n      this.openDialog = true;\n      this.isAdd = false;\n      this.isEditTask = true;\n      this.taskModel = task;\n    };\n    this.deleteTask = task => {\n      this.taskService.deleteTask(task).subscribe(response => {\n        if (!response) return;\n        const state = new StateModel();\n        state.key = task.id.toString();\n        state.action = ActionsEnum.DELETE;\n        state.value = task;\n        this.stateService.deleteData(state);\n        this.getTaskList(this.token);\n        this.messageService.add({\n          severity: response.isSuccessful ? 'success' : 'error',\n          summary: response.isSuccessful ? 'Completado' : 'error',\n          detail: response.isSuccessful ? `Se ha eliminado la tarea ${task.title}` : response.errorMessage,\n          life: 3000\n        });\n      });\n    };\n    this.hideDialog = event => {\n      if (event == null) return;\n      this.getTaskList(this.token);\n      this.openDialog = event.openDialog || false;\n    };\n    this.applyFilterGlobal = ($event, stringVal) => {\n      debugger;\n      const obj = this.dt.filter($event.target.value, 'dev', stringVal);\n      return obj;\n    };\n    this.taskModel = new TaskModel();\n  }\n  ngOnInit() {\n    this.user.email = \"ciro@gmail.com\";\n    this.user.password = \"123\";\n    this.GetToken(this.user);\n    // this.getTaskList();\n  }\n\n  deleteTaskConfirm(data) {\n    this.confirmationService.confirm({\n      message: '¿Esta seguro que desea eliminar?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        const {\n          id\n        } = data;\n        this.deleteTask(data);\n        this.taskModel = new TaskModel();\n      }\n    });\n  }\n}\n_class = TaskListComponent;\n_class.ɵfac = function TaskListComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.taskService), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i2.ConfirmationService), i0.ɵɵdirectiveInject(i3.stateService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"ta-app-task-list\"]],\n  viewQuery: function TaskListComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dt = _t.first);\n    }\n  },\n  decls: 13,\n  vars: 13,\n  consts: [[1, \"\", 2, \"display\", \"grid\", \"margin\", \"0px\", \"justify-content\", \"center\"], [2, \"padding\", \"10px\"], [\"styleClass\", \"mb-4 gap-2\"], [\"pTemplate\", \"left\"], [\"dataKey\", \"id\", \"currentPageReportTemplate\", \"Mostrando {first} de {last} elementos\", 1, \"StandardTable\", 3, \"value\", \"rows\", \"paginator\", \"tableStyle\", \"rowHover\", \"showCurrentPageReport\", \"globalFilterFields\"], [\"dt\", \"\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [4, \"ngIf\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Nueva tarea\", \"icon\", \"pi pi-plus\", 1, \"p-button-success\", \"mr-2\", 3, \"click\"], [1, \"table-header\", 2, \"text-align\", \"center\"], [2, \"margin\", \"0px\", \"font-size\", \"20px\"], [1, \"p-input-icon-left\"], [\"pSortableColumn\", \"name\", 2, \"min-width\", \"15rem\"], [\"field\", \"name\"], [\"pSortableColumn\", \"dev\", 2, \"min-width\", \"15rem\"], [\"field\", \"dev\"], [\"pSortableColumn\", \"desc\", 2, \"min-width\", \"10rem\"], [\"field\", \"desc\"], [\"pSortableColumn\", \"status\", 2, \"min-width\", \"10rem\"], [\"field\", \"status\"], [3, \"value\", \"severity\"], [2, \"display\", \"grid\", \"grid-template-columns\", \"repeat(2, 1fr)\", \"grid-gap\", \"10px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-pencil\", 1, \"p-button-rounded\", \"p-button-confirm\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-trash\", 1, \"p-button-rounded\", \"p-button-danger\", 3, \"click\"], [3, \"openDialog\", \"taskModel\", \"isEdit\", \"isAdd\", \"closeDialog\"]],\n  template: function TaskListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"article\", 1);\n      i0.ɵɵelement(2, \"p-toast\");\n      i0.ɵɵelementStart(3, \"p-toolbar\", 2);\n      i0.ɵɵtemplate(4, TaskListComponent_ng_template_4_Template, 1, 0, \"ng-template\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"p-table\", 4, 5);\n      i0.ɵɵtemplate(7, TaskListComponent_ng_template_7_Template, 4, 0, \"ng-template\", 6);\n      i0.ɵɵtemplate(8, TaskListComponent_ng_template_8_Template, 16, 0, \"ng-template\", 7);\n      i0.ɵɵtemplate(9, TaskListComponent_ng_template_9_Template, 16, 8, \"ng-template\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"p-toast\")(11, \"p-confirmDialog\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(12, TaskListComponent_div_12_Template, 2, 4, \"div\", 9);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"value\", ctx.taskList)(\"rows\", 10)(\"paginator\", true)(\"tableStyle\", i0.ɵɵpureFunction0(10, _c1))(\"rowHover\", true)(\"showCurrentPageReport\", true)(\"globalFilterFields\", i0.ɵɵpureFunction0(11, _c2));\n      i0.ɵɵadvance(6);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(12, _c3));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.openDialog);\n    }\n  },\n  dependencies: [i4.NgIf, i5.Table, i2.PrimeTemplate, i5.SortableColumn, i5.SortIcon, i6.Toast, i7.Toolbar, i8.ButtonDirective, i9.Tag, i10.ConfirmDialog, i11.TaskComponent, i4.DatePipe]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}